prompt me a prompt for replit for this code :
import { useState, useEffect } from "react"; import { useForm } from "react-hook-form"; import { zodResolver } from "@hookform/resolvers/zod"; import { z } from "zod"; import { insertInvoiceSchema } from "@shared/schema"; import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage, } from "@/components/ui/form"; import { Input } from "@/components/ui/input"; import { Textarea } from "@/components/ui/textarea"; import { Button } from "@/components/ui/button"; import { Checkbox } from "@/components/ui/checkbox"; import { useCreateInvoice } from "@/hooks/useInvoices"; import { useSolanaPrice } from "@/hooks/useInvoices"; import { formatCurrency } from "@/utils/currency"; import { useWalletContext } from "@/providers/WalletProvider"; import { format } from "date-fns"; import { useToast } from "@/hooks/use-toast";
// Extend the insert schema with validation const invoiceFormSchema = insertInvoiceSchema.extend({ amount: z.coerce.number().min(0.001, "Amount must be greater than 0"), dueDate: z.coerce.date().min(new Date(), "Due date must be in the future"), });
// Form values type type InvoiceFormValues = z.infer<typeof invoiceFormSchema>;
export function InvoiceForm() { const { toast } = useToast(); const { data: solanaPrice } = useSolanaPrice(); const { connected, address } = useWalletContext(); const [amountInSol, setAmountInSol] = useState<number>(0); const createInvoice = useCreateInvoice();
// Initialize form with default values const form = useForm<InvoiceFormValues>({ resolver: zodResolver(invoiceFormSchema), defaultValues: { invoiceNumber: , creatorId: 1, // Default user recipientName: "", recipientWalletAddress: "", amount: 0, fiatAmount: 0, description: "", dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // Default to 1 week from now status: "draft", issueDate: new Date(), convertOnPayment: false, }, });
// Watch amount to update fiat amount const amount = form.watch("amount");
// Using useEffect to safely update fiat amount when SOL amount changes useEffect(() => { if (amount !== amountInSol && solanaPrice?.price) { setAmountInSol(amount); form.setValue("fiatAmount", amount * solanaPrice.price); } }, [amount, amountInSol, solanaPrice?.price, form]);
// Form submission handler const onSubmit = async (data: InvoiceFormValues) => { if (!connected) { toast({ title: "Wallet Not Connected", description: "Please connect your wallet to create an invoice", variant: "destructive", }); return; }

};
return ( <Form {...form}> <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-5"> <FormField control={form.control} name="recipientName" render={({ field }) => ( <FormItem> <FormLabel htmlFor="recipient">Recipient</FormLabel> <FormControl> <div className="relative rounded-md shadow-sm"> <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400"> <svgxmlns="http://www.w3.org/2000/svg"className="h-5 w-5"viewBox="0 0 24 24"fill="none"stroke="currentColor"strokeWidth="2"strokeLinecap="round"strokeLinejoin="round"> <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path> <circle cx="12" cy="7" r="4"></circle> </svg> </div> <Input id="recipient" placeholder="Name or Company" className="pl-10" {...field} /> </div> </FormControl> <FormMessage /> </FormItem> )} />

); }
basically this is the edit you need remove the Equivalent (USD) please